defmodule Chip8.Memory do
  # 0
  @fonts [
    [0xF0, 0x90, 0x90, 0x90, 0xF0],
    # 1
    [0x20, 0x60, 0x20, 0x20, 0x70],
    # 2
    [0xF0, 0x10, 0xF0, 0x80, 0xF0],
    # 3
    [0xF0, 0x10, 0xF0, 0x10, 0xF0],
    # 4
    [0x90, 0x90, 0xF0, 0x10, 0x10],
    # 5
    [0xF0, 0x80, 0xF0, 0x10, 0xF0],
    # 6
    [0xF0, 0x80, 0xF0, 0x90, 0xF0],
    # 7
    [0xF0, 0x10, 0x20, 0x40, 0x40],
    # 8
    [0xF0, 0x90, 0xF0, 0x90, 0xF0],
    # 9
    [0xF0, 0x90, 0xF0, 0x10, 0xF0],
    # A
    [0xF0, 0x90, 0xF0, 0x90, 0x90],
    # B
    [0xE0, 0x90, 0xE0, 0x90, 0xE0],
    # C
    [0xF0, 0x80, 0x80, 0x80, 0xF0],
    # D
    [0xE0, 0x90, 0x90, 0x90, 0xE0],
    # E
    [0xF0, 0x80, 0xF0, 0x80, 0xF0],
    # F
    [0xF0, 0x80, 0xF0, 0x80, 0x80]
  ]

  @doc "Initialize the CHIP-8 memory"
  def new do
    font_bytes = List.flatten(@fonts)

    for x <- 0x000..0xFFF, into: %{} do
      if x in 0..16 do
        {x, Enum.at(font_bytes, x)}
      else
        {x, nil}
      end
    end
  end
end
